
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000900  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000aa8  08000ab0  00010ab0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000aa8  08000aa8  00010ab0  2**0
                  CONTENTS
  4 .ARM          00000000  08000aa8  08000aa8  00010ab0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000aa8  08000ab0  00010ab0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000aa8  08000aa8  00010aa8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000aac  08000aac  00010aac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010ab0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010ab0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010ab0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b07  00000000  00000000  00010ae0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002b5  00000000  00000000  000115e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  000118a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000a0  00000000  00000000  00011968  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001e52  00000000  00000000  00011a08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000ff7  00000000  00000000  0001385a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000867d  00000000  00000000  00014851  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001cece  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000028c  00000000  00000000  0001cf20  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000a90 	.word	0x08000a90

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000a90 	.word	0x08000a90

080001e8 <delay>:
#include "string.h"
#include "stm32f407xx.h"
#include "stm32f407xx_gpio_driver.h"
#define HIGH 1
#define BTN_PRESSED HIGH
void delay(uint32_t delay){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
	while(delay > 0){
 80001f0:	e002      	b.n	80001f8 <delay+0x10>
		delay--;
 80001f2:	687b      	ldr	r3, [r7, #4]
 80001f4:	3b01      	subs	r3, #1
 80001f6:	607b      	str	r3, [r7, #4]
	while(delay > 0){
 80001f8:	687b      	ldr	r3, [r7, #4]
 80001fa:	2b00      	cmp	r3, #0
 80001fc:	d1f9      	bne.n	80001f2 <delay+0xa>
	}
}
 80001fe:	bf00      	nop
 8000200:	bf00      	nop
 8000202:	370c      	adds	r7, #12
 8000204:	46bd      	mov	sp, r7
 8000206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020a:	4770      	bx	lr

0800020c <main>:

int main(void){
 800020c:	b580      	push	{r7, lr}
 800020e:	b086      	sub	sp, #24
 8000210:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLED, GPIOBtn;
	memset(&GpioLED, 0, sizeof(GpioLED)); // init. to zero
 8000212:	f107 030c 	add.w	r3, r7, #12
 8000216:	220c      	movs	r2, #12
 8000218:	2100      	movs	r1, #0
 800021a:	4618      	mov	r0, r3
 800021c:	f000 fc30 	bl	8000a80 <memset>
	memset(&GPIOBtn, 0, sizeof(GPIOBtn));
 8000220:	463b      	mov	r3, r7
 8000222:	220c      	movs	r2, #12
 8000224:	2100      	movs	r1, #0
 8000226:	4618      	mov	r0, r3
 8000228:	f000 fc2a 	bl	8000a80 <memset>
	uint8_t val;

	// Led configuration
	GpioLED.pGPIOx = GPIOD;
 800022c:	4b19      	ldr	r3, [pc, #100]	; (8000294 <main+0x88>)
 800022e:	60fb      	str	r3, [r7, #12]
	GpioLED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000230:	230c      	movs	r3, #12
 8000232:	743b      	strb	r3, [r7, #16]
	GpioLED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 8000234:	2301      	movs	r3, #1
 8000236:	747b      	strb	r3, [r7, #17]
	GpioLED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000238:	2302      	movs	r3, #2
 800023a:	74bb      	strb	r3, [r7, #18]
	GpioLED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800023c:	2300      	movs	r3, #0
 800023e:	753b      	strb	r3, [r7, #20]
	GpioLED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000240:	2300      	movs	r3, #0
 8000242:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000244:	2101      	movs	r1, #1
 8000246:	4813      	ldr	r0, [pc, #76]	; (8000294 <main+0x88>)
 8000248:	f000 f864 	bl	8000314 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLED);
 800024c:	f107 030c 	add.w	r3, r7, #12
 8000250:	4618      	mov	r0, r3
 8000252:	f000 f977 	bl	8000544 <GPIO_Init>

	// Button Configuration
	GPIOBtn.pGPIOx = GPIOA;
 8000256:	4b10      	ldr	r3, [pc, #64]	; (8000298 <main+0x8c>)
 8000258:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 800025a:	2300      	movs	r3, #0
 800025c:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RT;
 800025e:	2305      	movs	r3, #5
 8000260:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000262:	2302      	movs	r3, #2
 8000264:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000266:	2300      	movs	r3, #0
 8000268:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 800026a:	2101      	movs	r1, #1
 800026c:	480a      	ldr	r0, [pc, #40]	; (8000298 <main+0x8c>)
 800026e:	f000 f851 	bl	8000314 <GPIO_PeriClockControl>
	GPIO_Init(&GPIOBtn);
 8000272:	463b      	mov	r3, r7
 8000274:	4618      	mov	r0, r3
 8000276:	f000 f965 	bl	8000544 <GPIO_Init>

	// IRQ configuration
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI0, NVIC_IRQ_PRIO15);
 800027a:	210f      	movs	r1, #15
 800027c:	2006      	movs	r0, #6
 800027e:	f000 fb8d 	bl	800099c <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0, ENABLE);
 8000282:	2101      	movs	r1, #1
 8000284:	2006      	movs	r0, #6
 8000286:	f000 fb07 	bl	8000898 <GPIO_IRQInterruptConfig>

	return 0;
 800028a:	2300      	movs	r3, #0
}
 800028c:	4618      	mov	r0, r3
 800028e:	3718      	adds	r7, #24
 8000290:	46bd      	mov	sp, r7
 8000292:	bd80      	pop	{r7, pc}
 8000294:	40020c00 	.word	0x40020c00
 8000298:	40020000 	.word	0x40020000

0800029c <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(void){
 800029c:	b580      	push	{r7, lr}
 800029e:	af00      	add	r7, sp, #0
	delay(500000);
 80002a0:	4805      	ldr	r0, [pc, #20]	; (80002b8 <EXTI0_IRQHandler+0x1c>)
 80002a2:	f7ff ffa1 	bl	80001e8 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_0); // clears the Pending register bit
 80002a6:	2000      	movs	r0, #0
 80002a8:	f000 fba6 	bl	80009f8 <GPIO_IRQHandling>
	GPIO_TogglePin(GPIOD, GPIO_PIN_NO_12);
 80002ac:	210c      	movs	r1, #12
 80002ae:	4803      	ldr	r0, [pc, #12]	; (80002bc <EXTI0_IRQHandler+0x20>)
 80002b0:	f000 fadc 	bl	800086c <GPIO_TogglePin>
}
 80002b4:	bf00      	nop
 80002b6:	bd80      	pop	{r7, pc}
 80002b8:	0007a120 	.word	0x0007a120
 80002bc:	40020c00 	.word	0x40020c00

080002c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c0:	480d      	ldr	r0, [pc, #52]	; (80002f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c8:	480c      	ldr	r0, [pc, #48]	; (80002fc <LoopForever+0x6>)
  ldr r1, =_edata
 80002ca:	490d      	ldr	r1, [pc, #52]	; (8000300 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002cc:	4a0d      	ldr	r2, [pc, #52]	; (8000304 <LoopForever+0xe>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d0:	e002      	b.n	80002d8 <LoopCopyDataInit>

080002d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d6:	3304      	adds	r3, #4

080002d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002dc:	d3f9      	bcc.n	80002d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002de:	4a0a      	ldr	r2, [pc, #40]	; (8000308 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e0:	4c0a      	ldr	r4, [pc, #40]	; (800030c <LoopForever+0x16>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e4:	e001      	b.n	80002ea <LoopFillZerobss>

080002e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e8:	3204      	adds	r2, #4

080002ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002ec:	d3fb      	bcc.n	80002e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ee:	f000 fba3 	bl	8000a38 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f2:	f7ff ff8b 	bl	800020c <main>

080002f6 <LoopForever>:

LoopForever:
    b LoopForever
 80002f6:	e7fe      	b.n	80002f6 <LoopForever>
  ldr   r0, =_estack
 80002f8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000304:	08000ab0 	.word	0x08000ab0
  ldr r2, =_sbss
 8000308:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800030c:	2000001c 	.word	0x2000001c

08000310 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC_IRQHandler>
	...

08000314 <GPIO_PeriClockControl>:
 *
 * @return				- none
 *
 * @Note				- none
 * */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t enOrDi){
 8000314:	b480      	push	{r7}
 8000316:	b083      	sub	sp, #12
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
 800031c:	460b      	mov	r3, r1
 800031e:	70fb      	strb	r3, [r7, #3]
	if(enOrDi == ENABLE){
 8000320:	78fb      	ldrb	r3, [r7, #3]
 8000322:	2b01      	cmp	r3, #1
 8000324:	d178      	bne.n	8000418 <GPIO_PeriClockControl+0x104>
		if(pGPIOx == GPIOA){
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	4a7a      	ldr	r2, [pc, #488]	; (8000514 <GPIO_PeriClockControl+0x200>)
 800032a:	4293      	cmp	r3, r2
 800032c:	d106      	bne.n	800033c <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 800032e:	4b7a      	ldr	r3, [pc, #488]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000330:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000332:	4a79      	ldr	r2, [pc, #484]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000334:	f043 0301 	orr.w	r3, r3, #1
 8000338:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOJ_PCLK_DI();
		}else if(pGPIOx == GPIOK){
			GPIOK_PCLK_DI();
		}
	}
}
 800033a:	e0e5      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOB){
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	4a77      	ldr	r2, [pc, #476]	; (800051c <GPIO_PeriClockControl+0x208>)
 8000340:	4293      	cmp	r3, r2
 8000342:	d106      	bne.n	8000352 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000344:	4b74      	ldr	r3, [pc, #464]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000346:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000348:	4a73      	ldr	r2, [pc, #460]	; (8000518 <GPIO_PeriClockControl+0x204>)
 800034a:	f043 0302 	orr.w	r3, r3, #2
 800034e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000350:	e0da      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOC){
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a72      	ldr	r2, [pc, #456]	; (8000520 <GPIO_PeriClockControl+0x20c>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d106      	bne.n	8000368 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800035a:	4b6f      	ldr	r3, [pc, #444]	; (8000518 <GPIO_PeriClockControl+0x204>)
 800035c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035e:	4a6e      	ldr	r2, [pc, #440]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000360:	f043 0304 	orr.w	r3, r3, #4
 8000364:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000366:	e0cf      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOD){
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	4a6e      	ldr	r2, [pc, #440]	; (8000524 <GPIO_PeriClockControl+0x210>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d106      	bne.n	800037e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000370:	4b69      	ldr	r3, [pc, #420]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000372:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000374:	4a68      	ldr	r2, [pc, #416]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000376:	f043 0308 	orr.w	r3, r3, #8
 800037a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037c:	e0c4      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOE){
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	4a69      	ldr	r2, [pc, #420]	; (8000528 <GPIO_PeriClockControl+0x214>)
 8000382:	4293      	cmp	r3, r2
 8000384:	d106      	bne.n	8000394 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000386:	4b64      	ldr	r3, [pc, #400]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038a:	4a63      	ldr	r2, [pc, #396]	; (8000518 <GPIO_PeriClockControl+0x204>)
 800038c:	f043 0310 	orr.w	r3, r3, #16
 8000390:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000392:	e0b9      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOF){
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	4a65      	ldr	r2, [pc, #404]	; (800052c <GPIO_PeriClockControl+0x218>)
 8000398:	4293      	cmp	r3, r2
 800039a:	d106      	bne.n	80003aa <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 800039c:	4b5e      	ldr	r3, [pc, #376]	; (8000518 <GPIO_PeriClockControl+0x204>)
 800039e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a0:	4a5d      	ldr	r2, [pc, #372]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80003a2:	f043 0320 	orr.w	r3, r3, #32
 80003a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a8:	e0ae      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOG){
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	4a60      	ldr	r2, [pc, #384]	; (8000530 <GPIO_PeriClockControl+0x21c>)
 80003ae:	4293      	cmp	r3, r2
 80003b0:	d106      	bne.n	80003c0 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003b2:	4b59      	ldr	r3, [pc, #356]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80003b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b6:	4a58      	ldr	r2, [pc, #352]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80003b8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003be:	e0a3      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOH){
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	4a5c      	ldr	r2, [pc, #368]	; (8000534 <GPIO_PeriClockControl+0x220>)
 80003c4:	4293      	cmp	r3, r2
 80003c6:	d106      	bne.n	80003d6 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80003c8:	4b53      	ldr	r3, [pc, #332]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80003ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003cc:	4a52      	ldr	r2, [pc, #328]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80003ce:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d4:	e098      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOI){
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	4a57      	ldr	r2, [pc, #348]	; (8000538 <GPIO_PeriClockControl+0x224>)
 80003da:	4293      	cmp	r3, r2
 80003dc:	d106      	bne.n	80003ec <GPIO_PeriClockControl+0xd8>
			GPIOI_PCLK_EN();
 80003de:	4b4e      	ldr	r3, [pc, #312]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80003e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e2:	4a4d      	ldr	r2, [pc, #308]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80003e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ea:	e08d      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOJ){
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	4a53      	ldr	r2, [pc, #332]	; (800053c <GPIO_PeriClockControl+0x228>)
 80003f0:	4293      	cmp	r3, r2
 80003f2:	d106      	bne.n	8000402 <GPIO_PeriClockControl+0xee>
			GPIOJ_PCLK_EN();
 80003f4:	4b48      	ldr	r3, [pc, #288]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80003f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f8:	4a47      	ldr	r2, [pc, #284]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80003fa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80003fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000400:	e082      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOK){
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	4a4e      	ldr	r2, [pc, #312]	; (8000540 <GPIO_PeriClockControl+0x22c>)
 8000406:	4293      	cmp	r3, r2
 8000408:	d17e      	bne.n	8000508 <GPIO_PeriClockControl+0x1f4>
			GPIOK_PCLK_EN();
 800040a:	4b43      	ldr	r3, [pc, #268]	; (8000518 <GPIO_PeriClockControl+0x204>)
 800040c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040e:	4a42      	ldr	r2, [pc, #264]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000410:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000414:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000416:	e077      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		if(pGPIOx == GPIOA){
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	4a3e      	ldr	r2, [pc, #248]	; (8000514 <GPIO_PeriClockControl+0x200>)
 800041c:	4293      	cmp	r3, r2
 800041e:	d106      	bne.n	800042e <GPIO_PeriClockControl+0x11a>
			GPIOA_PCLK_DI();
 8000420:	4b3d      	ldr	r3, [pc, #244]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000422:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000424:	4a3c      	ldr	r2, [pc, #240]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000426:	f023 0301 	bic.w	r3, r3, #1
 800042a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800042c:	e06c      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOB){
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	4a3a      	ldr	r2, [pc, #232]	; (800051c <GPIO_PeriClockControl+0x208>)
 8000432:	4293      	cmp	r3, r2
 8000434:	d106      	bne.n	8000444 <GPIO_PeriClockControl+0x130>
			GPIOB_PCLK_DI();
 8000436:	4b38      	ldr	r3, [pc, #224]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000438:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043a:	4a37      	ldr	r2, [pc, #220]	; (8000518 <GPIO_PeriClockControl+0x204>)
 800043c:	f023 0302 	bic.w	r3, r3, #2
 8000440:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000442:	e061      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOC){
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	4a36      	ldr	r2, [pc, #216]	; (8000520 <GPIO_PeriClockControl+0x20c>)
 8000448:	4293      	cmp	r3, r2
 800044a:	d106      	bne.n	800045a <GPIO_PeriClockControl+0x146>
			GPIOC_PCLK_DI();
 800044c:	4b32      	ldr	r3, [pc, #200]	; (8000518 <GPIO_PeriClockControl+0x204>)
 800044e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000450:	4a31      	ldr	r2, [pc, #196]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000452:	f023 0304 	bic.w	r3, r3, #4
 8000456:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000458:	e056      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOD){
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	4a31      	ldr	r2, [pc, #196]	; (8000524 <GPIO_PeriClockControl+0x210>)
 800045e:	4293      	cmp	r3, r2
 8000460:	d106      	bne.n	8000470 <GPIO_PeriClockControl+0x15c>
			GPIOD_PCLK_DI();
 8000462:	4b2d      	ldr	r3, [pc, #180]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000464:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000466:	4a2c      	ldr	r2, [pc, #176]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000468:	f023 0308 	bic.w	r3, r3, #8
 800046c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800046e:	e04b      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOE){
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	4a2d      	ldr	r2, [pc, #180]	; (8000528 <GPIO_PeriClockControl+0x214>)
 8000474:	4293      	cmp	r3, r2
 8000476:	d106      	bne.n	8000486 <GPIO_PeriClockControl+0x172>
			GPIOE_PCLK_DI();
 8000478:	4b27      	ldr	r3, [pc, #156]	; (8000518 <GPIO_PeriClockControl+0x204>)
 800047a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800047c:	4a26      	ldr	r2, [pc, #152]	; (8000518 <GPIO_PeriClockControl+0x204>)
 800047e:	f023 0310 	bic.w	r3, r3, #16
 8000482:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000484:	e040      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOF){
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	4a28      	ldr	r2, [pc, #160]	; (800052c <GPIO_PeriClockControl+0x218>)
 800048a:	4293      	cmp	r3, r2
 800048c:	d106      	bne.n	800049c <GPIO_PeriClockControl+0x188>
			GPIOF_PCLK_DI();
 800048e:	4b22      	ldr	r3, [pc, #136]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000492:	4a21      	ldr	r2, [pc, #132]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000494:	f023 0320 	bic.w	r3, r3, #32
 8000498:	6313      	str	r3, [r2, #48]	; 0x30
}
 800049a:	e035      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOG){
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	4a24      	ldr	r2, [pc, #144]	; (8000530 <GPIO_PeriClockControl+0x21c>)
 80004a0:	4293      	cmp	r3, r2
 80004a2:	d106      	bne.n	80004b2 <GPIO_PeriClockControl+0x19e>
			GPIOG_PCLK_DI();
 80004a4:	4b1c      	ldr	r3, [pc, #112]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80004a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004a8:	4a1b      	ldr	r2, [pc, #108]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80004aa:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80004ae:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004b0:	e02a      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOH){
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	4a1f      	ldr	r2, [pc, #124]	; (8000534 <GPIO_PeriClockControl+0x220>)
 80004b6:	4293      	cmp	r3, r2
 80004b8:	d106      	bne.n	80004c8 <GPIO_PeriClockControl+0x1b4>
			GPIOH_PCLK_DI();
 80004ba:	4b17      	ldr	r3, [pc, #92]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80004bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004be:	4a16      	ldr	r2, [pc, #88]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80004c0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80004c4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004c6:	e01f      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOI){
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	4a1b      	ldr	r2, [pc, #108]	; (8000538 <GPIO_PeriClockControl+0x224>)
 80004cc:	4293      	cmp	r3, r2
 80004ce:	d106      	bne.n	80004de <GPIO_PeriClockControl+0x1ca>
			GPIOI_PCLK_DI();
 80004d0:	4b11      	ldr	r3, [pc, #68]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80004d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004d4:	4a10      	ldr	r2, [pc, #64]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80004d6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80004da:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004dc:	e014      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOJ){
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	4a16      	ldr	r2, [pc, #88]	; (800053c <GPIO_PeriClockControl+0x228>)
 80004e2:	4293      	cmp	r3, r2
 80004e4:	d106      	bne.n	80004f4 <GPIO_PeriClockControl+0x1e0>
			GPIOJ_PCLK_DI();
 80004e6:	4b0c      	ldr	r3, [pc, #48]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80004e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ea:	4a0b      	ldr	r2, [pc, #44]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80004ec:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80004f0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004f2:	e009      	b.n	8000508 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOK){
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	4a12      	ldr	r2, [pc, #72]	; (8000540 <GPIO_PeriClockControl+0x22c>)
 80004f8:	4293      	cmp	r3, r2
 80004fa:	d105      	bne.n	8000508 <GPIO_PeriClockControl+0x1f4>
			GPIOK_PCLK_DI();
 80004fc:	4b06      	ldr	r3, [pc, #24]	; (8000518 <GPIO_PeriClockControl+0x204>)
 80004fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000500:	4a05      	ldr	r2, [pc, #20]	; (8000518 <GPIO_PeriClockControl+0x204>)
 8000502:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000506:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000508:	bf00      	nop
 800050a:	370c      	adds	r7, #12
 800050c:	46bd      	mov	sp, r7
 800050e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000512:	4770      	bx	lr
 8000514:	40020000 	.word	0x40020000
 8000518:	40023800 	.word	0x40023800
 800051c:	40020400 	.word	0x40020400
 8000520:	40020800 	.word	0x40020800
 8000524:	40020c00 	.word	0x40020c00
 8000528:	40021000 	.word	0x40021000
 800052c:	40021400 	.word	0x40021400
 8000530:	40021800 	.word	0x40021800
 8000534:	40021c00 	.word	0x40021c00
 8000538:	40022000 	.word	0x40022000
 800053c:	40022400 	.word	0x40022400
 8000540:	40022800 	.word	0x40022800

08000544 <GPIO_Init>:
 *
 * @return				- none
 *
 * @Note				- none
 * */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000544:	b480      	push	{r7}
 8000546:	b087      	sub	sp, #28
 8000548:	af00      	add	r7, sp, #0
 800054a:	6078      	str	r0, [r7, #4]
	uint32_t temp=0; // temp register
 800054c:	2300      	movs	r3, #0
 800054e:	617b      	str	r3, [r7, #20]
	// Configure the mode of the gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	795b      	ldrb	r3, [r3, #5]
 8000554:	2b03      	cmp	r3, #3
 8000556:	d821      	bhi.n	800059c <GPIO_Init+0x58>
		// non interrupt mode
		// look to GPIO Mode Register in the reference manual
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	795b      	ldrb	r3, [r3, #5]
 800055c:	461a      	mov	r2, r3
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	791b      	ldrb	r3, [r3, #4]
 8000562:	005b      	lsls	r3, r3, #1
 8000564:	fa02 f303 	lsl.w	r3, r2, r3
 8000568:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clear bit first
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	681a      	ldr	r2, [r3, #0]
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	791b      	ldrb	r3, [r3, #4]
 8000574:	4619      	mov	r1, r3
 8000576:	2303      	movs	r3, #3
 8000578:	408b      	lsls	r3, r1
 800057a:	43db      	mvns	r3, r3
 800057c:	4619      	mov	r1, r3
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	681b      	ldr	r3, [r3, #0]
 8000582:	400a      	ands	r2, r1
 8000584:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	681b      	ldr	r3, [r3, #0]
 800058a:	6819      	ldr	r1, [r3, #0]
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	681b      	ldr	r3, [r3, #0]
 8000590:	697a      	ldr	r2, [r7, #20]
 8000592:	430a      	orrs	r2, r1
 8000594:	601a      	str	r2, [r3, #0]
		temp = 0; // clear temp
 8000596:	2300      	movs	r3, #0
 8000598:	617b      	str	r3, [r7, #20]
 800059a:	e0c2      	b.n	8000722 <GPIO_Init+0x1de>
	}else{
		// interrupt mode
		/*Pin must be in input configuration*/
		/*Configure the edge trigger*/
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	795b      	ldrb	r3, [r3, #5]
 80005a0:	2b04      	cmp	r3, #4
 80005a2:	d117      	bne.n	80005d4 <GPIO_Init+0x90>
			// Configure the FTSR
			EXTI->FTSR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005a4:	4b47      	ldr	r3, [pc, #284]	; (80006c4 <GPIO_Init+0x180>)
 80005a6:	68db      	ldr	r3, [r3, #12]
 80005a8:	687a      	ldr	r2, [r7, #4]
 80005aa:	7912      	ldrb	r2, [r2, #4]
 80005ac:	4611      	mov	r1, r2
 80005ae:	2201      	movs	r2, #1
 80005b0:	408a      	lsls	r2, r1
 80005b2:	4611      	mov	r1, r2
 80005b4:	4a43      	ldr	r2, [pc, #268]	; (80006c4 <GPIO_Init+0x180>)
 80005b6:	430b      	orrs	r3, r1
 80005b8:	60d3      	str	r3, [r2, #12]
			// clear the RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ba:	4b42      	ldr	r3, [pc, #264]	; (80006c4 <GPIO_Init+0x180>)
 80005bc:	689b      	ldr	r3, [r3, #8]
 80005be:	687a      	ldr	r2, [r7, #4]
 80005c0:	7912      	ldrb	r2, [r2, #4]
 80005c2:	4611      	mov	r1, r2
 80005c4:	2201      	movs	r2, #1
 80005c6:	408a      	lsls	r2, r1
 80005c8:	43d2      	mvns	r2, r2
 80005ca:	4611      	mov	r1, r2
 80005cc:	4a3d      	ldr	r2, [pc, #244]	; (80006c4 <GPIO_Init+0x180>)
 80005ce:	400b      	ands	r3, r1
 80005d0:	6093      	str	r3, [r2, #8]
 80005d2:	e035      	b.n	8000640 <GPIO_Init+0xfc>
		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	795b      	ldrb	r3, [r3, #5]
 80005d8:	2b05      	cmp	r3, #5
 80005da:	d117      	bne.n	800060c <GPIO_Init+0xc8>
			EXTI->RTSR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005dc:	4b39      	ldr	r3, [pc, #228]	; (80006c4 <GPIO_Init+0x180>)
 80005de:	689b      	ldr	r3, [r3, #8]
 80005e0:	687a      	ldr	r2, [r7, #4]
 80005e2:	7912      	ldrb	r2, [r2, #4]
 80005e4:	4611      	mov	r1, r2
 80005e6:	2201      	movs	r2, #1
 80005e8:	408a      	lsls	r2, r1
 80005ea:	4611      	mov	r1, r2
 80005ec:	4a35      	ldr	r2, [pc, #212]	; (80006c4 <GPIO_Init+0x180>)
 80005ee:	430b      	orrs	r3, r1
 80005f0:	6093      	str	r3, [r2, #8]
			// clear the RTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005f2:	4b34      	ldr	r3, [pc, #208]	; (80006c4 <GPIO_Init+0x180>)
 80005f4:	68db      	ldr	r3, [r3, #12]
 80005f6:	687a      	ldr	r2, [r7, #4]
 80005f8:	7912      	ldrb	r2, [r2, #4]
 80005fa:	4611      	mov	r1, r2
 80005fc:	2201      	movs	r2, #1
 80005fe:	408a      	lsls	r2, r1
 8000600:	43d2      	mvns	r2, r2
 8000602:	4611      	mov	r1, r2
 8000604:	4a2f      	ldr	r2, [pc, #188]	; (80006c4 <GPIO_Init+0x180>)
 8000606:	400b      	ands	r3, r1
 8000608:	60d3      	str	r3, [r2, #12]
 800060a:	e019      	b.n	8000640 <GPIO_Init+0xfc>
		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	795b      	ldrb	r3, [r3, #5]
 8000610:	2b05      	cmp	r3, #5
 8000612:	d115      	bne.n	8000640 <GPIO_Init+0xfc>
			EXTI->FTSR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000614:	4b2b      	ldr	r3, [pc, #172]	; (80006c4 <GPIO_Init+0x180>)
 8000616:	68db      	ldr	r3, [r3, #12]
 8000618:	687a      	ldr	r2, [r7, #4]
 800061a:	7912      	ldrb	r2, [r2, #4]
 800061c:	4611      	mov	r1, r2
 800061e:	2201      	movs	r2, #1
 8000620:	408a      	lsls	r2, r1
 8000622:	4611      	mov	r1, r2
 8000624:	4a27      	ldr	r2, [pc, #156]	; (80006c4 <GPIO_Init+0x180>)
 8000626:	430b      	orrs	r3, r1
 8000628:	60d3      	str	r3, [r2, #12]
			// clear the RTSR bit
			EXTI->RTSR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 800062a:	4b26      	ldr	r3, [pc, #152]	; (80006c4 <GPIO_Init+0x180>)
 800062c:	689b      	ldr	r3, [r3, #8]
 800062e:	687a      	ldr	r2, [r7, #4]
 8000630:	7912      	ldrb	r2, [r2, #4]
 8000632:	4611      	mov	r1, r2
 8000634:	2201      	movs	r2, #1
 8000636:	408a      	lsls	r2, r1
 8000638:	4611      	mov	r1, r2
 800063a:	4a22      	ldr	r2, [pc, #136]	; (80006c4 <GPIO_Init+0x180>)
 800063c:	430b      	orrs	r3, r1
 800063e:	6093      	str	r3, [r2, #8]
		}
		/*Configure the GPIO Port Selection SYSCFG_EXTICR*/
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	791b      	ldrb	r3, [r3, #4]
 8000644:	089b      	lsrs	r3, r3, #2
 8000646:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	791b      	ldrb	r3, [r3, #4]
 800064c:	f003 0303 	and.w	r3, r3, #3
 8000650:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	4a1c      	ldr	r2, [pc, #112]	; (80006c8 <GPIO_Init+0x184>)
 8000658:	4293      	cmp	r3, r2
 800065a:	d045      	beq.n	80006e8 <GPIO_Init+0x1a4>
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	4a1a      	ldr	r2, [pc, #104]	; (80006cc <GPIO_Init+0x188>)
 8000662:	4293      	cmp	r3, r2
 8000664:	d02b      	beq.n	80006be <GPIO_Init+0x17a>
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	4a19      	ldr	r2, [pc, #100]	; (80006d0 <GPIO_Init+0x18c>)
 800066c:	4293      	cmp	r3, r2
 800066e:	d024      	beq.n	80006ba <GPIO_Init+0x176>
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	4a17      	ldr	r2, [pc, #92]	; (80006d4 <GPIO_Init+0x190>)
 8000676:	4293      	cmp	r3, r2
 8000678:	d01d      	beq.n	80006b6 <GPIO_Init+0x172>
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	4a16      	ldr	r2, [pc, #88]	; (80006d8 <GPIO_Init+0x194>)
 8000680:	4293      	cmp	r3, r2
 8000682:	d016      	beq.n	80006b2 <GPIO_Init+0x16e>
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	4a14      	ldr	r2, [pc, #80]	; (80006dc <GPIO_Init+0x198>)
 800068a:	4293      	cmp	r3, r2
 800068c:	d00f      	beq.n	80006ae <GPIO_Init+0x16a>
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	681b      	ldr	r3, [r3, #0]
 8000692:	4a13      	ldr	r2, [pc, #76]	; (80006e0 <GPIO_Init+0x19c>)
 8000694:	4293      	cmp	r3, r2
 8000696:	d008      	beq.n	80006aa <GPIO_Init+0x166>
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	4a11      	ldr	r2, [pc, #68]	; (80006e4 <GPIO_Init+0x1a0>)
 800069e:	4293      	cmp	r3, r2
 80006a0:	d101      	bne.n	80006a6 <GPIO_Init+0x162>
 80006a2:	2307      	movs	r3, #7
 80006a4:	e021      	b.n	80006ea <GPIO_Init+0x1a6>
 80006a6:	2300      	movs	r3, #0
 80006a8:	e01f      	b.n	80006ea <GPIO_Init+0x1a6>
 80006aa:	2306      	movs	r3, #6
 80006ac:	e01d      	b.n	80006ea <GPIO_Init+0x1a6>
 80006ae:	2305      	movs	r3, #5
 80006b0:	e01b      	b.n	80006ea <GPIO_Init+0x1a6>
 80006b2:	2304      	movs	r3, #4
 80006b4:	e019      	b.n	80006ea <GPIO_Init+0x1a6>
 80006b6:	2303      	movs	r3, #3
 80006b8:	e017      	b.n	80006ea <GPIO_Init+0x1a6>
 80006ba:	2302      	movs	r3, #2
 80006bc:	e015      	b.n	80006ea <GPIO_Init+0x1a6>
 80006be:	2301      	movs	r3, #1
 80006c0:	e013      	b.n	80006ea <GPIO_Init+0x1a6>
 80006c2:	bf00      	nop
 80006c4:	40013c00 	.word	0x40013c00
 80006c8:	40020000 	.word	0x40020000
 80006cc:	40020400 	.word	0x40020400
 80006d0:	40020800 	.word	0x40020800
 80006d4:	40020c00 	.word	0x40020c00
 80006d8:	40021000 	.word	0x40021000
 80006dc:	40021400 	.word	0x40021400
 80006e0:	40021800 	.word	0x40021800
 80006e4:	40021c00 	.word	0x40021c00
 80006e8:	2300      	movs	r3, #0
 80006ea:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 80006ec:	4b5c      	ldr	r3, [pc, #368]	; (8000860 <GPIO_Init+0x31c>)
 80006ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006f0:	4a5b      	ldr	r2, [pc, #364]	; (8000860 <GPIO_Init+0x31c>)
 80006f2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80006f6:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2*4);
 80006f8:	7c7a      	ldrb	r2, [r7, #17]
 80006fa:	7cbb      	ldrb	r3, [r7, #18]
 80006fc:	009b      	lsls	r3, r3, #2
 80006fe:	fa02 f103 	lsl.w	r1, r2, r3
 8000702:	4a58      	ldr	r2, [pc, #352]	; (8000864 <GPIO_Init+0x320>)
 8000704:	7cfb      	ldrb	r3, [r7, #19]
 8000706:	3302      	adds	r3, #2
 8000708:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		/*enable interrupt delivery from peripheral to the processor*/
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 800070c:	4b56      	ldr	r3, [pc, #344]	; (8000868 <GPIO_Init+0x324>)
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	687a      	ldr	r2, [r7, #4]
 8000712:	7912      	ldrb	r2, [r2, #4]
 8000714:	4611      	mov	r1, r2
 8000716:	2201      	movs	r2, #1
 8000718:	408a      	lsls	r2, r1
 800071a:	4611      	mov	r1, r2
 800071c:	4a52      	ldr	r2, [pc, #328]	; (8000868 <GPIO_Init+0x324>)
 800071e:	430b      	orrs	r3, r1
 8000720:	6013      	str	r3, [r2, #0]
		/*Enable interrupt reception on that IRQ number(Processor side)*/
		/*Implement IRQ handler*/

	}
		// Configure the speed
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	799b      	ldrb	r3, [r3, #6]
 8000726:	461a      	mov	r2, r3
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	791b      	ldrb	r3, [r3, #4]
 800072c:	005b      	lsls	r3, r3, #1
 800072e:	fa02 f303 	lsl.w	r3, r2, r3
 8000732:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clear bit first
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	681b      	ldr	r3, [r3, #0]
 8000738:	689a      	ldr	r2, [r3, #8]
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	791b      	ldrb	r3, [r3, #4]
 800073e:	4619      	mov	r1, r3
 8000740:	2303      	movs	r3, #3
 8000742:	408b      	lsls	r3, r1
 8000744:	43db      	mvns	r3, r3
 8000746:	4619      	mov	r1, r3
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	400a      	ands	r2, r1
 800074e:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	681b      	ldr	r3, [r3, #0]
 8000754:	6899      	ldr	r1, [r3, #8]
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	681b      	ldr	r3, [r3, #0]
 800075a:	697a      	ldr	r2, [r7, #20]
 800075c:	430a      	orrs	r2, r1
 800075e:	609a      	str	r2, [r3, #8]
		temp = 0;
 8000760:	2300      	movs	r3, #0
 8000762:	617b      	str	r3, [r7, #20]
		// configure the pupd settings
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl<< (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	79db      	ldrb	r3, [r3, #7]
 8000768:	461a      	mov	r2, r3
 800076a:	687b      	ldr	r3, [r7, #4]
 800076c:	791b      	ldrb	r3, [r3, #4]
 800076e:	005b      	lsls	r3, r3, #1
 8000770:	fa02 f303 	lsl.w	r3, r2, r3
 8000774:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clear bit first
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	681b      	ldr	r3, [r3, #0]
 800077a:	68da      	ldr	r2, [r3, #12]
 800077c:	687b      	ldr	r3, [r7, #4]
 800077e:	791b      	ldrb	r3, [r3, #4]
 8000780:	4619      	mov	r1, r3
 8000782:	2303      	movs	r3, #3
 8000784:	408b      	lsls	r3, r1
 8000786:	43db      	mvns	r3, r3
 8000788:	4619      	mov	r1, r3
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	681b      	ldr	r3, [r3, #0]
 800078e:	400a      	ands	r2, r1
 8000790:	60da      	str	r2, [r3, #12]
		pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	68d9      	ldr	r1, [r3, #12]
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	697a      	ldr	r2, [r7, #20]
 800079e:	430a      	orrs	r2, r1
 80007a0:	60da      	str	r2, [r3, #12]
		temp = 0;
 80007a2:	2300      	movs	r3, #0
 80007a4:	617b      	str	r3, [r7, #20]
		// configure the optype
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	7a1b      	ldrb	r3, [r3, #8]
 80007aa:	461a      	mov	r2, r3
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	791b      	ldrb	r3, [r3, #4]
 80007b0:	fa02 f303 	lsl.w	r3, r2, r3
 80007b4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clear bit first
 80007b6:	687b      	ldr	r3, [r7, #4]
 80007b8:	681b      	ldr	r3, [r3, #0]
 80007ba:	685a      	ldr	r2, [r3, #4]
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	791b      	ldrb	r3, [r3, #4]
 80007c0:	4619      	mov	r1, r3
 80007c2:	2301      	movs	r3, #1
 80007c4:	408b      	lsls	r3, r1
 80007c6:	43db      	mvns	r3, r3
 80007c8:	4619      	mov	r1, r3
 80007ca:	687b      	ldr	r3, [r7, #4]
 80007cc:	681b      	ldr	r3, [r3, #0]
 80007ce:	400a      	ands	r2, r1
 80007d0:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER |= temp;
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	681b      	ldr	r3, [r3, #0]
 80007d6:	6859      	ldr	r1, [r3, #4]
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	697a      	ldr	r2, [r7, #20]
 80007de:	430a      	orrs	r2, r1
 80007e0:	605a      	str	r2, [r3, #4]
		temp = 0;
 80007e2:	2300      	movs	r3, #0
 80007e4:	617b      	str	r3, [r7, #20]
		// configure the alt functionality
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	795b      	ldrb	r3, [r3, #5]
 80007ea:	2b02      	cmp	r3, #2
 80007ec:	d132      	bne.n	8000854 <GPIO_Init+0x310>
			uint32_t temp1, temp2;
			temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80007ee:	687b      	ldr	r3, [r7, #4]
 80007f0:	791b      	ldrb	r3, [r3, #4]
 80007f2:	08db      	lsrs	r3, r3, #3
 80007f4:	b2db      	uxtb	r3, r3
 80007f6:	60fb      	str	r3, [r7, #12]
			temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80007f8:	687b      	ldr	r3, [r7, #4]
 80007fa:	791b      	ldrb	r3, [r3, #4]
 80007fc:	f003 0307 	and.w	r3, r3, #7
 8000800:	60bb      	str	r3, [r7, #8]
			pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4*temp2));
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	681b      	ldr	r3, [r3, #0]
 8000806:	68fa      	ldr	r2, [r7, #12]
 8000808:	3208      	adds	r2, #8
 800080a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800080e:	68bb      	ldr	r3, [r7, #8]
 8000810:	009b      	lsls	r3, r3, #2
 8000812:	210f      	movs	r1, #15
 8000814:	fa01 f303 	lsl.w	r3, r1, r3
 8000818:	43db      	mvns	r3, r3
 800081a:	4619      	mov	r1, r3
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	681b      	ldr	r3, [r3, #0]
 8000820:	4011      	ands	r1, r2
 8000822:	68fa      	ldr	r2, [r7, #12]
 8000824:	3208      	adds	r2, #8
 8000826:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2);
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	681b      	ldr	r3, [r3, #0]
 800082e:	68fa      	ldr	r2, [r7, #12]
 8000830:	3208      	adds	r2, #8
 8000832:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000836:	687b      	ldr	r3, [r7, #4]
 8000838:	7a5b      	ldrb	r3, [r3, #9]
 800083a:	4619      	mov	r1, r3
 800083c:	68bb      	ldr	r3, [r7, #8]
 800083e:	009b      	lsls	r3, r3, #2
 8000840:	fa01 f303 	lsl.w	r3, r1, r3
 8000844:	4619      	mov	r1, r3
 8000846:	687b      	ldr	r3, [r7, #4]
 8000848:	681b      	ldr	r3, [r3, #0]
 800084a:	4311      	orrs	r1, r2
 800084c:	68fa      	ldr	r2, [r7, #12]
 800084e:	3208      	adds	r2, #8
 8000850:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		}
}
 8000854:	bf00      	nop
 8000856:	371c      	adds	r7, #28
 8000858:	46bd      	mov	sp, r7
 800085a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800085e:	4770      	bx	lr
 8000860:	40023800 	.word	0x40023800
 8000864:	40013800 	.word	0x40013800
 8000868:	40013c00 	.word	0x40013c00

0800086c <GPIO_TogglePin>:
 *
 * @return				- none
 *
 * @Note				- none
 * */
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 800086c:	b480      	push	{r7}
 800086e:	b083      	sub	sp, #12
 8000870:	af00      	add	r7, sp, #0
 8000872:	6078      	str	r0, [r7, #4]
 8000874:	460b      	mov	r3, r1
 8000876:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	695b      	ldr	r3, [r3, #20]
 800087c:	78fa      	ldrb	r2, [r7, #3]
 800087e:	2101      	movs	r1, #1
 8000880:	fa01 f202 	lsl.w	r2, r1, r2
 8000884:	405a      	eors	r2, r3
 8000886:	687b      	ldr	r3, [r7, #4]
 8000888:	615a      	str	r2, [r3, #20]
}
 800088a:	bf00      	nop
 800088c:	370c      	adds	r7, #12
 800088e:	46bd      	mov	sp, r7
 8000890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000894:	4770      	bx	lr
	...

08000898 <GPIO_IRQInterruptConfig>:
 *
 * @return				- none
 *
 * @Note				- none
 * */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnOrDi){
 8000898:	b480      	push	{r7}
 800089a:	b083      	sub	sp, #12
 800089c:	af00      	add	r7, sp, #0
 800089e:	4603      	mov	r3, r0
 80008a0:	460a      	mov	r2, r1
 80008a2:	71fb      	strb	r3, [r7, #7]
 80008a4:	4613      	mov	r3, r2
 80008a6:	71bb      	strb	r3, [r7, #6]
// Refer to NVIC registers in the processor(not MCU!)

	/*1. Enable/Disable interrupts in NVIC*/
	if(EnOrDi == ENABLE){
 80008a8:	79bb      	ldrb	r3, [r7, #6]
 80008aa:	2b01      	cmp	r3, #1
 80008ac:	d133      	bne.n	8000916 <GPIO_IRQInterruptConfig+0x7e>
		if(IRQNumber <= 31){
 80008ae:	79fb      	ldrb	r3, [r7, #7]
 80008b0:	2b1f      	cmp	r3, #31
 80008b2:	d80a      	bhi.n	80008ca <GPIO_IRQInterruptConfig+0x32>
			// program ISER0 register
			*NVIC_ISER0 |= (1 << IRQNumber);
 80008b4:	4b33      	ldr	r3, [pc, #204]	; (8000984 <GPIO_IRQInterruptConfig+0xec>)
 80008b6:	681b      	ldr	r3, [r3, #0]
 80008b8:	79fa      	ldrb	r2, [r7, #7]
 80008ba:	2101      	movs	r1, #1
 80008bc:	fa01 f202 	lsl.w	r2, r1, r2
 80008c0:	4611      	mov	r1, r2
 80008c2:	4a30      	ldr	r2, [pc, #192]	; (8000984 <GPIO_IRQInterruptConfig+0xec>)
 80008c4:	430b      	orrs	r3, r1
 80008c6:	6013      	str	r3, [r2, #0]
		}else if(IRQNumber >= 64 && IRQNumber < 96){
			// program ICER2 register
			*NVIC_ICER2 |= (1 << IRQNumber);
		}
	}
}
 80008c8:	e055      	b.n	8000976 <GPIO_IRQInterruptConfig+0xde>
		}else if(IRQNumber > 31 && IRQNumber < 64){
 80008ca:	79fb      	ldrb	r3, [r7, #7]
 80008cc:	2b1f      	cmp	r3, #31
 80008ce:	d90f      	bls.n	80008f0 <GPIO_IRQInterruptConfig+0x58>
 80008d0:	79fb      	ldrb	r3, [r7, #7]
 80008d2:	2b3f      	cmp	r3, #63	; 0x3f
 80008d4:	d80c      	bhi.n	80008f0 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber%32) );
 80008d6:	4b2c      	ldr	r3, [pc, #176]	; (8000988 <GPIO_IRQInterruptConfig+0xf0>)
 80008d8:	681b      	ldr	r3, [r3, #0]
 80008da:	79fa      	ldrb	r2, [r7, #7]
 80008dc:	f002 021f 	and.w	r2, r2, #31
 80008e0:	2101      	movs	r1, #1
 80008e2:	fa01 f202 	lsl.w	r2, r1, r2
 80008e6:	4611      	mov	r1, r2
 80008e8:	4a27      	ldr	r2, [pc, #156]	; (8000988 <GPIO_IRQInterruptConfig+0xf0>)
 80008ea:	430b      	orrs	r3, r1
 80008ec:	6013      	str	r3, [r2, #0]
 80008ee:	e042      	b.n	8000976 <GPIO_IRQInterruptConfig+0xde>
		}else if(IRQNumber >= 64 && IRQNumber < 96){
 80008f0:	79fb      	ldrb	r3, [r7, #7]
 80008f2:	2b3f      	cmp	r3, #63	; 0x3f
 80008f4:	d93f      	bls.n	8000976 <GPIO_IRQInterruptConfig+0xde>
 80008f6:	79fb      	ldrb	r3, [r7, #7]
 80008f8:	2b5f      	cmp	r3, #95	; 0x5f
 80008fa:	d83c      	bhi.n	8000976 <GPIO_IRQInterruptConfig+0xde>
			*NVIC_ISER2 |= (1 << (IRQNumber%32) );
 80008fc:	4b23      	ldr	r3, [pc, #140]	; (800098c <GPIO_IRQInterruptConfig+0xf4>)
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	79fa      	ldrb	r2, [r7, #7]
 8000902:	f002 021f 	and.w	r2, r2, #31
 8000906:	2101      	movs	r1, #1
 8000908:	fa01 f202 	lsl.w	r2, r1, r2
 800090c:	4611      	mov	r1, r2
 800090e:	4a1f      	ldr	r2, [pc, #124]	; (800098c <GPIO_IRQInterruptConfig+0xf4>)
 8000910:	430b      	orrs	r3, r1
 8000912:	6013      	str	r3, [r2, #0]
}
 8000914:	e02f      	b.n	8000976 <GPIO_IRQInterruptConfig+0xde>
		if(IRQNumber <= 31){
 8000916:	79fb      	ldrb	r3, [r7, #7]
 8000918:	2b1f      	cmp	r3, #31
 800091a:	d80a      	bhi.n	8000932 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 800091c:	4b1c      	ldr	r3, [pc, #112]	; (8000990 <GPIO_IRQInterruptConfig+0xf8>)
 800091e:	681b      	ldr	r3, [r3, #0]
 8000920:	79fa      	ldrb	r2, [r7, #7]
 8000922:	2101      	movs	r1, #1
 8000924:	fa01 f202 	lsl.w	r2, r1, r2
 8000928:	4611      	mov	r1, r2
 800092a:	4a19      	ldr	r2, [pc, #100]	; (8000990 <GPIO_IRQInterruptConfig+0xf8>)
 800092c:	430b      	orrs	r3, r1
 800092e:	6013      	str	r3, [r2, #0]
}
 8000930:	e021      	b.n	8000976 <GPIO_IRQInterruptConfig+0xde>
		}else if(IRQNumber > 31 && IRQNumber < 64){
 8000932:	79fb      	ldrb	r3, [r7, #7]
 8000934:	2b1f      	cmp	r3, #31
 8000936:	d90d      	bls.n	8000954 <GPIO_IRQInterruptConfig+0xbc>
 8000938:	79fb      	ldrb	r3, [r7, #7]
 800093a:	2b3f      	cmp	r3, #63	; 0x3f
 800093c:	d80a      	bhi.n	8000954 <GPIO_IRQInterruptConfig+0xbc>
			*NVIC_ICER1 |= (1 << IRQNumber);
 800093e:	4b15      	ldr	r3, [pc, #84]	; (8000994 <GPIO_IRQInterruptConfig+0xfc>)
 8000940:	681b      	ldr	r3, [r3, #0]
 8000942:	79fa      	ldrb	r2, [r7, #7]
 8000944:	2101      	movs	r1, #1
 8000946:	fa01 f202 	lsl.w	r2, r1, r2
 800094a:	4611      	mov	r1, r2
 800094c:	4a11      	ldr	r2, [pc, #68]	; (8000994 <GPIO_IRQInterruptConfig+0xfc>)
 800094e:	430b      	orrs	r3, r1
 8000950:	6013      	str	r3, [r2, #0]
 8000952:	e010      	b.n	8000976 <GPIO_IRQInterruptConfig+0xde>
		}else if(IRQNumber >= 64 && IRQNumber < 96){
 8000954:	79fb      	ldrb	r3, [r7, #7]
 8000956:	2b3f      	cmp	r3, #63	; 0x3f
 8000958:	d90d      	bls.n	8000976 <GPIO_IRQInterruptConfig+0xde>
 800095a:	79fb      	ldrb	r3, [r7, #7]
 800095c:	2b5f      	cmp	r3, #95	; 0x5f
 800095e:	d80a      	bhi.n	8000976 <GPIO_IRQInterruptConfig+0xde>
			*NVIC_ICER2 |= (1 << IRQNumber);
 8000960:	4b0d      	ldr	r3, [pc, #52]	; (8000998 <GPIO_IRQInterruptConfig+0x100>)
 8000962:	681b      	ldr	r3, [r3, #0]
 8000964:	79fa      	ldrb	r2, [r7, #7]
 8000966:	2101      	movs	r1, #1
 8000968:	fa01 f202 	lsl.w	r2, r1, r2
 800096c:	4611      	mov	r1, r2
 800096e:	4a0a      	ldr	r2, [pc, #40]	; (8000998 <GPIO_IRQInterruptConfig+0x100>)
 8000970:	430b      	orrs	r3, r1
 8000972:	6013      	str	r3, [r2, #0]
}
 8000974:	e7ff      	b.n	8000976 <GPIO_IRQInterruptConfig+0xde>
 8000976:	bf00      	nop
 8000978:	370c      	adds	r7, #12
 800097a:	46bd      	mov	sp, r7
 800097c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000980:	4770      	bx	lr
 8000982:	bf00      	nop
 8000984:	e000e100 	.word	0xe000e100
 8000988:	e000e104 	.word	0xe000e104
 800098c:	e000e108 	.word	0xe000e108
 8000990:	e000e180 	.word	0xe000e180
 8000994:	e000e184 	.word	0xe000e184
 8000998:	e000e188 	.word	0xe000e188

0800099c <GPIO_IRQPriorityConfig>:


void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint8_t IRQPriority){
 800099c:	b480      	push	{r7}
 800099e:	b085      	sub	sp, #20
 80009a0:	af00      	add	r7, sp, #0
 80009a2:	4603      	mov	r3, r0
 80009a4:	460a      	mov	r2, r1
 80009a6:	71fb      	strb	r3, [r7, #7]
 80009a8:	4613      	mov	r3, r2
 80009aa:	71bb      	strb	r3, [r7, #6]
	/*Set IRQ priority*/
	// Find out the ipr register
	uint8_t iprx = IRQNumber / 4;
 80009ac:	79fb      	ldrb	r3, [r7, #7]
 80009ae:	089b      	lsrs	r3, r3, #2
 80009b0:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 80009b2:	79fb      	ldrb	r3, [r7, #7]
 80009b4:	f003 0303 	and.w	r3, r3, #3
 80009b8:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8*iprx_section) + (8-NO_PR_BITS_IMPLEMENTED);
 80009ba:	7bbb      	ldrb	r3, [r7, #14]
 80009bc:	00db      	lsls	r3, r3, #3
 80009be:	b2db      	uxtb	r3, r3
 80009c0:	3304      	adds	r3, #4
 80009c2:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx*4) |= (IRQPriority << shift_amount);
 80009c4:	7bfb      	ldrb	r3, [r7, #15]
 80009c6:	011b      	lsls	r3, r3, #4
 80009c8:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009cc:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009d0:	681a      	ldr	r2, [r3, #0]
 80009d2:	79b9      	ldrb	r1, [r7, #6]
 80009d4:	7b7b      	ldrb	r3, [r7, #13]
 80009d6:	fa01 f303 	lsl.w	r3, r1, r3
 80009da:	4619      	mov	r1, r3
 80009dc:	7bfb      	ldrb	r3, [r7, #15]
 80009de:	011b      	lsls	r3, r3, #4
 80009e0:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009e4:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009e8:	430a      	orrs	r2, r1
 80009ea:	601a      	str	r2, [r3, #0]
}
 80009ec:	bf00      	nop
 80009ee:	3714      	adds	r7, #20
 80009f0:	46bd      	mov	sp, r7
 80009f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009f6:	4770      	bx	lr

080009f8 <GPIO_IRQHandling>:
 *
 * @return				- none
 *
 * @Note				- none
 * */
void GPIO_IRQHandling(uint8_t PinNumber){
 80009f8:	b480      	push	{r7}
 80009fa:	b083      	sub	sp, #12
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	4603      	mov	r3, r0
 8000a00:	71fb      	strb	r3, [r7, #7]
	// Clear EXT PR Register corresponding to the pin number
	if(EXTI->PR & (1 << PinNumber)){
 8000a02:	4b0c      	ldr	r3, [pc, #48]	; (8000a34 <GPIO_IRQHandling+0x3c>)
 8000a04:	695b      	ldr	r3, [r3, #20]
 8000a06:	79fa      	ldrb	r2, [r7, #7]
 8000a08:	2101      	movs	r1, #1
 8000a0a:	fa01 f202 	lsl.w	r2, r1, r2
 8000a0e:	4013      	ands	r3, r2
 8000a10:	2b00      	cmp	r3, #0
 8000a12:	d009      	beq.n	8000a28 <GPIO_IRQHandling+0x30>
		EXTI->PR |= (1 << PinNumber);
 8000a14:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <GPIO_IRQHandling+0x3c>)
 8000a16:	695b      	ldr	r3, [r3, #20]
 8000a18:	79fa      	ldrb	r2, [r7, #7]
 8000a1a:	2101      	movs	r1, #1
 8000a1c:	fa01 f202 	lsl.w	r2, r1, r2
 8000a20:	4611      	mov	r1, r2
 8000a22:	4a04      	ldr	r2, [pc, #16]	; (8000a34 <GPIO_IRQHandling+0x3c>)
 8000a24:	430b      	orrs	r3, r1
 8000a26:	6153      	str	r3, [r2, #20]
	}
}
 8000a28:	bf00      	nop
 8000a2a:	370c      	adds	r7, #12
 8000a2c:	46bd      	mov	sp, r7
 8000a2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a32:	4770      	bx	lr
 8000a34:	40013c00 	.word	0x40013c00

08000a38 <__libc_init_array>:
 8000a38:	b570      	push	{r4, r5, r6, lr}
 8000a3a:	4d0d      	ldr	r5, [pc, #52]	; (8000a70 <__libc_init_array+0x38>)
 8000a3c:	4c0d      	ldr	r4, [pc, #52]	; (8000a74 <__libc_init_array+0x3c>)
 8000a3e:	1b64      	subs	r4, r4, r5
 8000a40:	10a4      	asrs	r4, r4, #2
 8000a42:	2600      	movs	r6, #0
 8000a44:	42a6      	cmp	r6, r4
 8000a46:	d109      	bne.n	8000a5c <__libc_init_array+0x24>
 8000a48:	4d0b      	ldr	r5, [pc, #44]	; (8000a78 <__libc_init_array+0x40>)
 8000a4a:	4c0c      	ldr	r4, [pc, #48]	; (8000a7c <__libc_init_array+0x44>)
 8000a4c:	f000 f820 	bl	8000a90 <_init>
 8000a50:	1b64      	subs	r4, r4, r5
 8000a52:	10a4      	asrs	r4, r4, #2
 8000a54:	2600      	movs	r6, #0
 8000a56:	42a6      	cmp	r6, r4
 8000a58:	d105      	bne.n	8000a66 <__libc_init_array+0x2e>
 8000a5a:	bd70      	pop	{r4, r5, r6, pc}
 8000a5c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a60:	4798      	blx	r3
 8000a62:	3601      	adds	r6, #1
 8000a64:	e7ee      	b.n	8000a44 <__libc_init_array+0xc>
 8000a66:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a6a:	4798      	blx	r3
 8000a6c:	3601      	adds	r6, #1
 8000a6e:	e7f2      	b.n	8000a56 <__libc_init_array+0x1e>
 8000a70:	08000aa8 	.word	0x08000aa8
 8000a74:	08000aa8 	.word	0x08000aa8
 8000a78:	08000aa8 	.word	0x08000aa8
 8000a7c:	08000aac 	.word	0x08000aac

08000a80 <memset>:
 8000a80:	4402      	add	r2, r0
 8000a82:	4603      	mov	r3, r0
 8000a84:	4293      	cmp	r3, r2
 8000a86:	d100      	bne.n	8000a8a <memset+0xa>
 8000a88:	4770      	bx	lr
 8000a8a:	f803 1b01 	strb.w	r1, [r3], #1
 8000a8e:	e7f9      	b.n	8000a84 <memset+0x4>

08000a90 <_init>:
 8000a90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a92:	bf00      	nop
 8000a94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a96:	bc08      	pop	{r3}
 8000a98:	469e      	mov	lr, r3
 8000a9a:	4770      	bx	lr

08000a9c <_fini>:
 8000a9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a9e:	bf00      	nop
 8000aa0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000aa2:	bc08      	pop	{r3}
 8000aa4:	469e      	mov	lr, r3
 8000aa6:	4770      	bx	lr
